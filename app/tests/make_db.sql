CREATE DATABASE petition_service;

\c petition_service;

DROP TABLE IF EXISTS PHOTO_FOLDER;
DROP TABLE IF EXISTS LIKES;
DROP TABLE IF EXISTS COMMENTS;
DROP TABLE IF EXISTS PETITION;

CREATE TABLE PETITION(
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
    HEADER VARCHAR(100) NOT NULL,
    IS_INITIATIVE BOOLEAN NOT NULL,
    CATEGORY VARCHAR(100) NOT NULL,
    PETITION_DESCRIPTION TEXT NOT NULL,
    PETITION_STATUS VARCHAR(25) NOT NULL DEFAULT 'На модерации',
    PETITIONER_EMAIL VARCHAR(255) NOT NULL,
    SUBMISSION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ADDRESS TEXT NOT NULL,
    REGION VARCHAR(50) NOT NULL,
    CITY_NAME VARCHAR(50) NOT NULL,
    PRIMARY KEY(ID)
);

CREATE TABLE LIKES(
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USER_EMAIL VARCHAR(255) NOT NULL,
    PETITION_ID INT NOT NULL,
    UNIQUE(USER_EMAIL, PETITION_ID),
    FOREIGN KEY (PETITION_ID) REFERENCES PETITION(ID)
);

CREATE TABLE PHOTO_FOLDER(
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    PETITION_ID INT NOT NULL,
    FOLDER_PATH TEXT NOT NULL,
    UNIQUE (FOLDER_PATH),
    FOREIGN KEY (PETITION_ID) REFERENCES PETITION(ID)
);

CREATE TABLE COMMENTS(
    ID INT NOT NULL GENERATED ALWAYS AS IDENTITY,
    SUBMISSION_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PETITION_ID INT NOT NULL,
    USER_ID INT NOT NULL,
    COMMENT_DESCRIPTION TEXT,
    FOREIGN KEY (PETITION_ID) REFERENCES PETITION(ID),
    PRIMARY KEY(ID)
);

CREATE USER saveliy WITH PASSWORD 'saveliy';

GRANT SELECT, INSERT, UPDATE, DELETE ON PETITION TO saveliy;
GRANT SELECT, INSERT, UPDATE, DELETE ON LIKES TO saveliy;
GRANT SELECT, INSERT, UPDATE, DELETE ON PHOTO_FOLDER TO saveliy;
GRANT SELECT, INSERT, UPDATE, DELETE ON COMMENTS TO saveliy;

GRANT CREATE, DROP ON SCHEMA public TO saveliy;